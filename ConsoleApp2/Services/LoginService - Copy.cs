/*using Serilog;
using Server.Attributes;
using Server.Network.TCP;
using Server.Unsorted;
using static Server.Unsorted.Constants;

namespace Server.Services
{
    public class LoginService_old
    {
        private static readonly ILogger Logger = Log.ForContext(
            Serilog.Core.Constants.SourceContextPropertyName,
            nameof(LoginService));

        [Handler(Opcode.PlayerGetTokenCsReq, SessionState.Ignored)]
        public static async Task OnPlayerGetToken(Session connection, byte[] payload)
        {
            var cplrtoken = PlayerGetTokenCsReq.Parser.ParseFrom(payload);
            if (cplrtoken == null) return;

            var a = new PlayerGetTokenScRsp { UID = 20 };
#if DEBUG
            Logger.Debug(cplrtoken.PPIEAKOMAKD);
            Logger.Debug(a.ToString());
#endif
            await connection.SendAsync(Opcode.PlayerGetTokenScRsp, a);
        }

        [Handler(Opcode.PlayerLoginCsReq)]
        public static async Task OnPlayerLogin(Session connection, byte[] _)
        {
            await connection.SendAsync(
                Opcode.PlayerLoginScRsp,
                new PlayerLoginScRsp
                {
                    BGONHENALMD = new BEPIDFNIMLN { NickName = "Hang", Level = 70, HCoin = 10000, SCoin = 10000, WorldLevel = 1, Stamina = 180 },
                    Stamina = 180,
                }
            );
            await connection.SendAsync(Opcode.ClientDownloadDataScNotify, new ClientDownloadDataScNotify());
            await connection.SendAsync(Opcode.UpdateFeatureSwitchScNotify, new UpdateFeatureSwitchScNotify());
            await connection.SendAsync(Opcode.SyncServerSceneChangeNotify, new SyncServerSceneChangeNotify());
            await connection.SendAsync(Opcode.DailyTaskDataScNotify, new DailyTaskDataScNotify());
            await connection.SendAsync(Opcode.RaidInfoNotify, new RaidInfoNotify());
            await connection.SendAsync(Opcode.BattlePassInfoNotify, new BattlePassInfoNotify { BattlePassData = 1, PurchaseType = BpTierType.Premium2 });
        }

        [Handler(Opcode.GetLevelRewardTakenListCsReq)]
        public static async Task OnGetLevelRewardTakenList(Session session, byte[] _)
        {
            await session.SendAsync(Opcode.GetLevelRewardTakenListScRsp, new GetLevelRewardTakenListScRsp { });
        }

        [Handler(Opcode.GetMissionStatusCsReq)]
        public static async Task OnGetMissionStatus(Session session, byte[] payload)
        {
            var getM = GetMissionStatusCsReq.Parser.ParseFrom(payload);
            if (getM == null) 
                return;

            var a = new GetMissionStatusScRsp();

            foreach (var _sub in getM.SubMissions)
                a.SubMissionStatusList.Add(new MissionData { Id = _sub, Status = MissionStatus.MissionPrepared });

            foreach (var _event in getM.EventMissions)
                a.MissionEventStatusList.Add(new MissionData { Id = _event, Status = MissionStatus.MissionPrepared });

            foreach (var _unfinish in getM.UnFinishedMissions)
                    a.FinishedMainMissionIdList.Add(_unfinish);

            await session.SendAsync(Opcode.GetMissionStatusScRsp, a);
            //await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x04, 0xf5, 0x00, 0x00, 0x00, 0x00, 0x05, 0xbf, 0x72, 0x85, 0x01, 0xd2, 0x87, 0x3d, 0x89, 0x86, 0x3d, 0xa5, 0x85, 0x3d, 0x8a, 0x86, 0x3d, 0xaf, 0x85, 0x3d, 0xc7, 0xd6, 0x3d, 0xae, 0xde, 0x3d, 0xed, 0x86, 0x3d, 0xbe, 0x88, 0x3d, 0xb1, 0x85, 0x3d, 0xb5, 0x88, 0x3d, 0xb0, 0x85, 0x3d, 0xd0, 0x87, 0x3d, 0xe3, 0xd5, 0x3d, 0xc5, 0xd6, 0x3d, 0x8d, 0xa3, 0x3e, 0x98, 0xe1, 0xf4, 0x01, 0xe6, 0xa4, 0xe8, 0x03, 0xb9, 0x88, 0x3d, 0xd1, 0x87, 0x3d, 0xb5, 0xd3, 0x3d, 0xd5, 0xa4, 0x3e, 0xe0, 0xdc, 0x7a, 0x89, 0xe1, 0xf4, 0x01, 0x8c, 0x86, 0x3d, 0xd1, 0xd2, 0x3d, 0xf9, 0xe0, 0xf4, 0x01, 0x8b, 0xe1, 0xf4, 0x01, 0x8f, 0xe1, 0xf4, 0x01, 0x8d, 0xe1, 0xf4, 0x01, 0x83, 0xe1, 0xf4, 0x01, 0xb2, 0xfc, 0xf5, 0x01, 0xe1, 0xd5, 0x3d, 0x84, 0xe1, 0xf4, 0x01, 0xfd, 0xd4, 0x3d, 0xb7, 0x88, 0x3d, 0xb4, 0xfc, 0xf5, 0x01, 0xb3, 0xfc, 0xf5, 0x01, 0xb7, 0xfc, 0xf5, 0x01, 0xcb, 0xdd, 0x3d, 0x42, 0xb4, 0x0a, 0xa5, 0x85, 0x3d, 0xaf, 0x85, 0x3d, 0xb0, 0x85, 0x3d, 0xb1, 0x85, 0x3d, 0xb2, 0x85, 0x3d, 0x89, 0x86, 0x3d, 0x8a, 0x86, 0x3d, 0x8b, 0x86, 0x3d, 0x8c, 0x86, 0x3d, 0xec, 0x86, 0x3d, 0xed, 0x86, 0x3d, 0xee, 0x86, 0x3d, 0xef, 0x86, 0x3d, 0xf0, 0x86, 0x3d, 0xd0, 0x87, 0x3d, 0xd1, 0x87, 0x3d, 0xd2, 0x87, 0x3d, 0xda, 0x87, 0x3d, 0xb4, 0x88, 0x3d, 0xb5, 0x88, 0x3d, 0xb6, 0x88, 0x3d, 0xb7, 0x88, 0x3d, 0xb8, 0x88, 0x3d, 0xbe, 0x88, 0x3d, 0xbf, 0x88, 0x3d, 0x99, 0x89, 0x3d, 0xd1, 0xd2, 0x3d, 0xd2, 0xd2, 0x3d, 0xb5, 0xd3, 0x3d, 0x99, 0xd4, 0x3d, 0x9a, 0xd4, 0x3d, 0x9b, 0xd4, 0x3d, 0x9c, 0xd4, 0x3d, 0x9d, 0xd4, 0x3d, 0x9e, 0xd4, 0x3d, 0xfd, 0xd4, 0x3d, 0xfe, 0xd4, 0x3d, 0xff, 0xd4, 0x3d, 0xe1, 0xd5, 0x3d, 0xe5, 0xd5, 0x3d, 0xe2, 0xd5, 0x3d, 0xe3, 0xd5, 0x3d, 0xe4, 0xd5, 0x3d, 0xc4, 0xd6, 0x3d, 0xc5, 0xd6, 0x3d, 0xc6, 0xd6, 0x3d, 0xc7, 0xd6, 0x3d, 0xa9, 0xd7, 0x3d, 0xaa, 0xd7, 0x3d, 0x8c, 0xd8, 0x3d, 0x8d, 0xd8, 0x3d, 0xf1, 0xd8, 0x3d, 0xf2, 0xd8, 0x3d, 0xd5, 0xd9, 0x3d, 0xd6, 0xd9, 0x3d, 0xd7, 0xd9, 0x3d, 0xd8, 0xd9, 0x3d, 0xd9, 0xd9, 0x3d, 0xb9, 0xda, 0x3d, 0xba, 0xda, 0x3d, 0xbb, 0xda, 0x3d, 0x9c, 0xdb, 0x3d, 0x9d, 0xdb, 0x3d, 0x9e, 0xdb, 0x3d, 0x9f, 0xdb, 0x3d, 0x81, 0xdc, 0x3d, 0x82, 0xdc, 0x3d, 0xe5, 0xdc, 0x3d, 0xc9, 0xdd, 0x3d, 0xca, 0xdd, 0x3d, 0xcb, 0xdd, 0x3d, 0xad, 0xde, 0x3d, 0xae, 0xde, 0x3d, 0xaf, 0xde, 0x3d, 0xc5, 0xa1, 0x3e, 0xa9, 0xa2, 0x3e, 0x8e, 0xa3, 0x3e, 0x8d, 0xa3, 0x3e, 0xf0, 0xa3, 0x3e, 0xf1, 0xa3, 0x3e, 0xf2, 0xa3, 0x3e, 0xd5, 0xa4, 0x3e, 0xb9, 0xa5, 0x3e, 0x81, 0x89, 0x7a, 0x82, 0x89, 0x7a, 0x83, 0x89, 0x7a, 0x84, 0x89, 0x7a, 0xe4, 0x89, 0x7a, 0xe5, 0x89, 0x7a, 0x83, 0x8a, 0x7a, 0x84, 0x8a, 0x7a, 0x85, 0x8a, 0x7a, 0xee, 0x89, 0x7a, 0xef, 0x89, 0x7a, 0xad, 0x8b, 0x7a, 0xe7, 0x89, 0x7a, 0xf0, 0x89, 0x7a, 0xec, 0x89, 0x7a, 0xe8, 0x89, 0x7a, 0xe6, 0x89, 0x7a, 0xe9, 0x89, 0x7a, 0xea, 0x89, 0x7a, 0xeb, 0x89, 0x7a, 0xed, 0x89, 0x7a, 0xf1, 0x89, 0x7a, 0xf4, 0x89, 0x7a, 0xf6, 0x89, 0x7a, 0xf7, 0x89, 0x7a, 0xf8, 0x89, 0x7a, 0xfa, 0x89, 0x7a, 0xae, 0x8b, 0x7a, 0xaf, 0x8b, 0x7a, 0xb0, 0x8b, 0x7a, 0xb1, 0x8b, 0x7a, 0xb6, 0x8b, 0x7a, 0xb7, 0x8b, 0x7a, 0xb8, 0x8b, 0x7a, 0xb9, 0x8b, 0x7a, 0xba, 0x8b, 0x7a, 0xd8, 0x8d, 0x7a, 0xd9, 0x8d, 0x7a, 0xda, 0x8d, 0x7a, 0xdb, 0x8d, 0x7a, 0x95, 0xd7, 0x7a, 0xbd, 0xd9, 0x7a, 0xbe, 0xd9, 0x7a, 0xdf, 0xdf, 0x7a, 0xe0, 0xdf, 0x7a, 0x91, 0xe2, 0x7a, 0xa1, 0xda, 0x7a, 0xa2, 0xda, 0x7a, 0xa3, 0xda, 0x7a, 0xa4, 0xda, 0x7a, 0xa5, 0xda, 0x7a, 0x86, 0xdb, 0x7a, 0x87, 0xdb, 0x7a, 0xcd, 0xdc, 0x7a, 0xd4, 0xdc, 0x7a, 0xd5, 0xdc, 0x7a, 0xd6, 0xdc, 0x7a, 0xd7, 0xdc, 0x7a, 0xd8, 0xdc, 0x7a, 0xd9, 0xdc, 0x7a, 0xda, 0xdc, 0x7a, 0x98, 0xde, 0x7a, 0xdd, 0xdf, 0x7a, 0xde, 0xdf, 0x7a, 0xe1, 0xdf, 0x7a, 0xa5, 0xe1, 0x7a, 0xa6, 0xe1, 0x7a, 0xa7, 0xe1, 0x7a, 0xed, 0xe2, 0x7a, 0xee, 0xe2, 0x7a, 0xcd, 0xa7, 0x7b, 0xce, 0xa7, 0x7b, 0xd0, 0xa7, 0x7b, 0xc9, 0x8a, 0x7a, 0xca, 0x8a, 0x7a, 0xcb, 0x8a, 0x7a, 0xcc, 0x8a, 0x7a, 0xcd, 0x8a, 0x7a, 0xce, 0x8a, 0x7a, 0xcf, 0x8a, 0x7a, 0xd0, 0x8a, 0x7a, 0xd3, 0x8a, 0x7a, 0xd4, 0x8a, 0x7a, 0x84, 0xdb, 0x7a, 0x85, 0xdb, 0x7a, 0xd1, 0xdc, 0x7a, 0xd2, 0xdc, 0x7a, 0x95, 0xde, 0x7a, 0x96, 0xde, 0x7a, 0x97, 0xde, 0x7a, 0xce, 0xdc, 0x7a, 0xcf, 0xdc, 0x7a, 0x88, 0xe2, 0x7a, 0x89, 0xe2, 0x7a, 0x8e, 0xe2, 0x7a, 0x8a, 0xe2, 0x7a, 0x8b, 0xe2, 0x7a, 0x8c, 0xe2, 0x7a, 0x8d, 0xe2, 0x7a, 0x8f, 0xe2, 0x7a, 0x90, 0xe2, 0x7a, 0x92, 0xe2, 0x7a, 0x99, 0xde, 0x7a, 0x9a, 0xde, 0x7a, 0x9b, 0xde, 0x7a, 0x9c, 0xde, 0x7a, 0x9d, 0xde, 0x7a, 0x9e, 0xde, 0x7a, 0x9f, 0xde, 0x7a, 0x89, 0x8f, 0xb7, 0x01, 0x8a, 0x8f, 0xb7, 0x01, 0x8b, 0x8f, 0xb7, 0x01, 0x93, 0x8f, 0xb7, 0x01, 0x94, 0x8f, 0xb7, 0x01, 0x95, 0x8f, 0xb7, 0x01, 0xca, 0x91, 0xb7, 0x01, 0xcb, 0x91, 0xb7, 0x01, 0xcc, 0x91, 0xb7, 0x01, 0xcd, 0x91, 0xb7, 0x01, 0xce, 0x91, 0xb7, 0x01, 0xcf, 0x91, 0xb7, 0x01, 0x99, 0x92, 0xb7, 0x01, 0x9a, 0x92, 0xb7, 0x01, 0x9b, 0x92, 0xb7, 0x01, 0x9c, 0x92, 0xb7, 0x01, 0xb6, 0xdc, 0xb7, 0x01, 0xb7, 0xdc, 0xb7, 0x01, 0xb8, 0xdc, 0xb7, 0x01, 0xb9, 0xdc, 0xb7, 0x01, 0x99, 0xdd, 0xb7, 0x01, 0x9a, 0xdd, 0xb7, 0x01, 0x9b, 0xdd, 0xb7, 0x01, 0x9c, 0xdd, 0xb7, 0x01, 0x9d, 0xdd, 0xb7, 0x01, 0xc3, 0xe3, 0xb7, 0x01, 0xc4, 0xe3, 0xb7, 0x01, 0xc5, 0xe3, 0xb7, 0x01, 0xc6, 0xe3, 0xb7, 0x01, 0xa7, 0xe4, 0xb7, 0x01, 0xa8, 0xe4, 0xb7, 0x01, 0xa9, 0xe4, 0xb7, 0x01, 0xaa, 0xe4, 0xb7, 0x01, 0x81, 0xe5, 0xb7, 0x01, 0x82, 0xe5, 0xb7, 0x01, 0x83, 0xe5, 0xb7, 0x01, 0x84, 0xe5, 0xb7, 0x01, 0x85, 0xe5, 0xb7, 0x01, 0x86, 0xe5, 0xb7, 0x01, 0x87, 0xe5, 0xb7, 0x01, 0x88, 0xe5, 0xb7, 0x01, 0xc9, 0xe6, 0xb7, 0x01, 0xca, 0xe6, 0xb7, 0x01, 0xcb, 0xe6, 0xb7, 0x01, 0xcc, 0xe6, 0xb7, 0x01, 0xcd, 0xe6, 0xb7, 0x01, 0xce, 0xe6, 0xb7, 0x01, 0xcf, 0xe6, 0xb7, 0x01, 0xd0, 0xe6, 0xb7, 0x01, 0x85, 0xaf, 0xf5, 0x01, 0x86, 0xaf, 0xf5, 0x01, 0x87, 0xaf, 0xf5, 0x01, 0x88, 0xaf, 0xf5, 0x01, 0x89, 0xaf, 0xf5, 0x01, 0x8a, 0xaf, 0xf5, 0x01, 0x8b, 0xaf, 0xf5, 0x01, 0x8c, 0xaf, 0xf5, 0x01, 0x8d, 0xaf, 0xf5, 0x01, 0x8e, 0xaf, 0xf5, 0x01, 0x8f, 0xaf, 0xf5, 0x01, 0x90, 0xaf, 0xf5, 0x01, 0x91, 0xaf, 0xf5, 0x01, 0x92, 0xaf, 0xf5, 0x01, 0xf9, 0xe0, 0xf4, 0x01, 0xfa, 0xe0, 0xf4, 0x01, 0xfd, 0xe0, 0xf4, 0x01, 0xfe, 0xe0, 0xf4, 0x01, 0xff, 0xe0, 0xf4, 0x01, 0x80, 0xe1, 0xf4, 0x01, 0x81, 0xe1, 0xf4, 0x01, 0x93, 0xe1, 0xf4, 0x01, 0x82, 0xe1, 0xf4, 0x01, 0x83, 0xe1, 0xf4, 0x01, 0x84, 0xe1, 0xf4, 0x01, 0x86, 0xe1, 0xf4, 0x01, 0x87, 0xe1, 0xf4, 0x01, 0x88, 0xe1, 0xf4, 0x01, 0x94, 0xe1, 0xf4, 0x01, 0x89, 0xe1, 0xf4, 0x01, 0x8a, 0xe1, 0xf4, 0x01, 0x8b, 0xe1, 0xf4, 0x01, 0x8c, 0xe1, 0xf4, 0x01, 0x8d, 0xe1, 0xf4, 0x01, 0x8e, 0xe1, 0xf4, 0x01, 0x8f, 0xe1, 0xf4, 0x01, 0x90, 0xe1, 0xf4, 0x01, 0x91, 0xe1, 0xf4, 0x01, 0x95, 0xe1, 0xf4, 0x01, 0x96, 0xe1, 0xf4, 0x01, 0x97, 0xe1, 0xf4, 0x01, 0x92, 0xe1, 0xf4, 0x01, 0x98, 0xe1, 0xf4, 0x01, 0xbe, 0xe2, 0xf4, 0x01, 0x85, 0xe4, 0xf4, 0x01, 0xbd, 0xad, 0xf5, 0x01, 0xb1, 0xfc, 0xf5, 0x01, 0xb2, 0xfc, 0xf5, 0x01, 0xb3, 0xfc, 0xf5, 0x01, 0xb8, 0xfc, 0xf5, 0x01, 0xb4, 0xfc, 0xf5, 0x01, 0xb5, 0xfc, 0xf5, 0x01, 0xb6, 0xfc, 0xf5, 0x01, 0xb7, 0xfc, 0xf5, 0x01, 0xb9, 0xfc, 0xf5, 0x01, 0xc1, 0xca, 0xf6, 0x01, 0xc2, 0xca, 0xf6, 0x01, 0xc3, 0xca, 0xf6, 0x01, 0xc4, 0xca, 0xf6, 0x01, 0xc5, 0xca, 0xf6, 0x01, 0xc6, 0xca, 0xf6, 0x01, 0xf4, 0xca, 0xf6, 0x01, 0xc7, 0xca, 0xf6, 0x01, 0xc8, 0xca, 0xf6, 0x01, 0xf3, 0xca, 0xf6, 0x01, 0xc9, 0xca, 0xf6, 0x01, 0xca, 0xca, 0xf6, 0x01, 0xcb, 0xca, 0xf6, 0x01, 0xcc, 0xca, 0xf6, 0x01, 0xf5, 0xca, 0xf6, 0x01, 0xcd, 0xca, 0xf6, 0x01, 0xce, 0xca, 0xf6, 0x01, 0xcf, 0xca, 0xf6, 0x01, 0xa5, 0xcb, 0xf6, 0x01, 0xd7, 0xcb, 0xf6, 0x01, 0xda, 0xcb, 0xf6, 0x01, 0xa6, 0xcb, 0xf6, 0x01, 0xa7, 0xcb, 0xf6, 0x01, 0xd9, 0xcb, 0xf6, 0x01, 0xa8, 0xcb, 0xf6, 0x01, 0xd8, 0xcb, 0xf6, 0x01, 0xa9, 0xcb, 0xf6, 0x01, 0xaa, 0xcb, 0xf6, 0x01, 0xdb, 0xcb, 0xf6, 0x01, 0xab, 0xcb, 0xf6, 0x01, 0xac, 0xcb, 0xf6, 0x01, 0xad, 0xcb, 0xf6, 0x01, 0xdc, 0xcb, 0xf6, 0x01, 0xdd, 0xcb, 0xf6, 0x01, 0xae, 0xcb, 0xf6, 0x01, 0xb2, 0xcb, 0xf6, 0x01, 0xb3, 0xcb, 0xf6, 0x01, 0xde, 0xcb, 0xf6, 0x01, 0xdf, 0xcb, 0xf6, 0x01, 0xe0, 0xcb, 0xf6, 0x01, 0xe1, 0xcb, 0xf6, 0x01, 0xe2, 0xcb, 0xf6, 0x01, 0xb4, 0xcb, 0xf6, 0x01, 0xe9, 0xcb, 0xf6, 0x01, 0xe3, 0xcb, 0xf6, 0x01, 0xe4, 0xcb, 0xf6, 0x01, 0xe5, 0xcb, 0xf6, 0x01, 0xe6, 0xcb, 0xf6, 0x01, 0xe7, 0xcb, 0xf6, 0x01, 0xe8, 0xcb, 0xf6, 0x01, 0x89, 0xcc, 0xf6, 0x01, 0xd1, 0x98, 0xf7, 0x01, 0xd2, 0x98, 0xf7, 0x01, 0xd3, 0x98, 0xf7, 0x01, 0xd4, 0x98, 0xf7, 0x01, 0xd5, 0x98, 0xf7, 0x01, 0xd6, 0x98, 0xf7, 0x01, 0xd7, 0x98, 0xf7, 0x01, 0xd8, 0x98, 0xf7, 0x01, 0xd9, 0x98, 0xf7, 0x01, 0xda, 0x98, 0xf7, 0x01, 0xdb, 0x98, 0xf7, 0x01, 0xdc, 0x98, 0xf7, 0x01, 0xa4, 0xf0, 0xf7, 0x01, 0xa5, 0xf0, 0xf7, 0x01, 0xae, 0xf0, 0xf7, 0x01, 0xaf, 0xf0, 0xf7, 0x01, 0xfe, 0xf0, 0xf7, 0x01, 0xff, 0xf0, 0xf7, 0x01, 0x88, 0xf1, 0xf7, 0x01, 0x89, 0xf1, 0xf7, 0x01, 0x9e, 0xf7, 0xf7, 0x01, 0x9f, 0xf7, 0xf7, 0x01, 0xa8, 0xf7, 0xf7, 0x01, 0xa9, 0xf7, 0xf7, 0x01, 0x8f, 0xbf, 0xf8, 0x01, 0x90, 0xbf, 0xf8, 0x01, 0x91, 0xbf, 0xf8, 0x01, 0xe2, 0xf0, 0xab, 0x03, 0xe3, 0xf0, 0xab, 0x03, 0xe4, 0xf0, 0xab, 0x03, 0xe5, 0xa4, 0xe8, 0x03, 0xe6, 0xa4, 0xe8, 0x03, 0xe8, 0xa4, 0xe8, 0x03, 0xe9, 0xa4, 0xe8, 0x03, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetRogueScoreRewardInfoCsReq)]
        public static async Task OnGetRogueScoreRewardInfo(Session session, byte[] _)
        {
            var b = new GetRogueScoreRewardInfoScRsp
            {
                ELBKFCDJPGF = new IMLOGEMOJMI
                {
                    HasTakenInitialScore = true,
                    PoolID = 23,
                    PoolRefreshed = true
                }
            };
            await session.SendAsync(Opcode.GetRogueScoreRewardInfoScRsp, b);
        }

        [Handler(Opcode.GetGachaInfoCsReq)]
        public static async Task OnGetGachaInfo(Session session, byte[] _)
        {
            var gachaInfo = new GetGachaInfoScRsp
            {
                RandomNum = 91
            };

            gachaInfo.MGFPBBAKOMI.Add(new GLIBDFCOMJJ
            {
                GachaID = 2004,
                HistoryURL = "https://google.com",
                EndTimeStamp = DateTimeOffset.Now.ToUnixTimeSeconds() * 2
            });

            gachaInfo.MGFPBBAKOMI[0].EDBGNPCFHBB.AddRange(new uint[] { 1001, 1202, 1204, 1206 }); //4 stars list
            gachaInfo.MGFPBBAKOMI[0].NFGHMBCIJCD.AddRange(new uint[] { 1204 }); //5 stars list

            await session.SendAsync(Opcode.GetGachaInfoScRsp, gachaInfo);
        }

        [Handler(Opcode.QueryProductInfoCsReq)]
        public static async Task OnQueryProductInfo(Session session, byte[] _)
        {
            await session.SendAsync(Opcode.QueryProductInfoScRsp, new QueryProductInfoScRsp { DJILMJDCMCJ = 1687967134 });
        }

        [Handler(Opcode.GetQuestDataCsReq)]
        public static async Task OnGetQuestData(Session session, byte[] _)
        {
            await session.SendAsync(Opcode.GetQuestDataScRsp, new GetQuestDataScRsp());
            //await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x04, 0xf5, 0x00, 0x00, 0x00, 0x00, 0x05, 0xbf, 0x72, 0x85, 0x01, 0xd2, 0x87, 0x3d, 0x89, 0x86, 0x3d, 0xa5, 0x85, 0x3d, 0x8a, 0x86, 0x3d, 0xaf, 0x85, 0x3d, 0xc7, 0xd6, 0x3d, 0xae, 0xde, 0x3d, 0xed, 0x86, 0x3d, 0xbe, 0x88, 0x3d, 0xb1, 0x85, 0x3d, 0xb5, 0x88, 0x3d, 0xb0, 0x85, 0x3d, 0xd0, 0x87, 0x3d, 0xe3, 0xd5, 0x3d, 0xc5, 0xd6, 0x3d, 0x8d, 0xa3, 0x3e, 0x98, 0xe1, 0xf4, 0x01, 0xe6, 0xa4, 0xe8, 0x03, 0xb9, 0x88, 0x3d, 0xd1, 0x87, 0x3d, 0xb5, 0xd3, 0x3d, 0xd5, 0xa4, 0x3e, 0xe0, 0xdc, 0x7a, 0x89, 0xe1, 0xf4, 0x01, 0x8c, 0x86, 0x3d, 0xd1, 0xd2, 0x3d, 0xf9, 0xe0, 0xf4, 0x01, 0x8b, 0xe1, 0xf4, 0x01, 0x8f, 0xe1, 0xf4, 0x01, 0x8d, 0xe1, 0xf4, 0x01, 0x83, 0xe1, 0xf4, 0x01, 0xb2, 0xfc, 0xf5, 0x01, 0xe1, 0xd5, 0x3d, 0x84, 0xe1, 0xf4, 0x01, 0xfd, 0xd4, 0x3d, 0xb7, 0x88, 0x3d, 0xb4, 0xfc, 0xf5, 0x01, 0xb3, 0xfc, 0xf5, 0x01, 0xb7, 0xfc, 0xf5, 0x01, 0xcb, 0xdd, 0x3d, 0x42, 0xb4, 0x0a, 0xa5, 0x85, 0x3d, 0xaf, 0x85, 0x3d, 0xb0, 0x85, 0x3d, 0xb1, 0x85, 0x3d, 0xb2, 0x85, 0x3d, 0x89, 0x86, 0x3d, 0x8a, 0x86, 0x3d, 0x8b, 0x86, 0x3d, 0x8c, 0x86, 0x3d, 0xec, 0x86, 0x3d, 0xed, 0x86, 0x3d, 0xee, 0x86, 0x3d, 0xef, 0x86, 0x3d, 0xf0, 0x86, 0x3d, 0xd0, 0x87, 0x3d, 0xd1, 0x87, 0x3d, 0xd2, 0x87, 0x3d, 0xda, 0x87, 0x3d, 0xb4, 0x88, 0x3d, 0xb5, 0x88, 0x3d, 0xb6, 0x88, 0x3d, 0xb7, 0x88, 0x3d, 0xb8, 0x88, 0x3d, 0xbe, 0x88, 0x3d, 0xbf, 0x88, 0x3d, 0x99, 0x89, 0x3d, 0xd1, 0xd2, 0x3d, 0xd2, 0xd2, 0x3d, 0xb5, 0xd3, 0x3d, 0x99, 0xd4, 0x3d, 0x9a, 0xd4, 0x3d, 0x9b, 0xd4, 0x3d, 0x9c, 0xd4, 0x3d, 0x9d, 0xd4, 0x3d, 0x9e, 0xd4, 0x3d, 0xfd, 0xd4, 0x3d, 0xfe, 0xd4, 0x3d, 0xff, 0xd4, 0x3d, 0xe1, 0xd5, 0x3d, 0xe5, 0xd5, 0x3d, 0xe2, 0xd5, 0x3d, 0xe3, 0xd5, 0x3d, 0xe4, 0xd5, 0x3d, 0xc4, 0xd6, 0x3d, 0xc5, 0xd6, 0x3d, 0xc6, 0xd6, 0x3d, 0xc7, 0xd6, 0x3d, 0xa9, 0xd7, 0x3d, 0xaa, 0xd7, 0x3d, 0x8c, 0xd8, 0x3d, 0x8d, 0xd8, 0x3d, 0xf1, 0xd8, 0x3d, 0xf2, 0xd8, 0x3d, 0xd5, 0xd9, 0x3d, 0xd6, 0xd9, 0x3d, 0xd7, 0xd9, 0x3d, 0xd8, 0xd9, 0x3d, 0xd9, 0xd9, 0x3d, 0xb9, 0xda, 0x3d, 0xba, 0xda, 0x3d, 0xbb, 0xda, 0x3d, 0x9c, 0xdb, 0x3d, 0x9d, 0xdb, 0x3d, 0x9e, 0xdb, 0x3d, 0x9f, 0xdb, 0x3d, 0x81, 0xdc, 0x3d, 0x82, 0xdc, 0x3d, 0xe5, 0xdc, 0x3d, 0xc9, 0xdd, 0x3d, 0xca, 0xdd, 0x3d, 0xcb, 0xdd, 0x3d, 0xad, 0xde, 0x3d, 0xae, 0xde, 0x3d, 0xaf, 0xde, 0x3d, 0xc5, 0xa1, 0x3e, 0xa9, 0xa2, 0x3e, 0x8e, 0xa3, 0x3e, 0x8d, 0xa3, 0x3e, 0xf0, 0xa3, 0x3e, 0xf1, 0xa3, 0x3e, 0xf2, 0xa3, 0x3e, 0xd5, 0xa4, 0x3e, 0xb9, 0xa5, 0x3e, 0x81, 0x89, 0x7a, 0x82, 0x89, 0x7a, 0x83, 0x89, 0x7a, 0x84, 0x89, 0x7a, 0xe4, 0x89, 0x7a, 0xe5, 0x89, 0x7a, 0x83, 0x8a, 0x7a, 0x84, 0x8a, 0x7a, 0x85, 0x8a, 0x7a, 0xee, 0x89, 0x7a, 0xef, 0x89, 0x7a, 0xad, 0x8b, 0x7a, 0xe7, 0x89, 0x7a, 0xf0, 0x89, 0x7a, 0xec, 0x89, 0x7a, 0xe8, 0x89, 0x7a, 0xe6, 0x89, 0x7a, 0xe9, 0x89, 0x7a, 0xea, 0x89, 0x7a, 0xeb, 0x89, 0x7a, 0xed, 0x89, 0x7a, 0xf1, 0x89, 0x7a, 0xf4, 0x89, 0x7a, 0xf6, 0x89, 0x7a, 0xf7, 0x89, 0x7a, 0xf8, 0x89, 0x7a, 0xfa, 0x89, 0x7a, 0xae, 0x8b, 0x7a, 0xaf, 0x8b, 0x7a, 0xb0, 0x8b, 0x7a, 0xb1, 0x8b, 0x7a, 0xb6, 0x8b, 0x7a, 0xb7, 0x8b, 0x7a, 0xb8, 0x8b, 0x7a, 0xb9, 0x8b, 0x7a, 0xba, 0x8b, 0x7a, 0xd8, 0x8d, 0x7a, 0xd9, 0x8d, 0x7a, 0xda, 0x8d, 0x7a, 0xdb, 0x8d, 0x7a, 0x95, 0xd7, 0x7a, 0xbd, 0xd9, 0x7a, 0xbe, 0xd9, 0x7a, 0xdf, 0xdf, 0x7a, 0xe0, 0xdf, 0x7a, 0x91, 0xe2, 0x7a, 0xa1, 0xda, 0x7a, 0xa2, 0xda, 0x7a, 0xa3, 0xda, 0x7a, 0xa4, 0xda, 0x7a, 0xa5, 0xda, 0x7a, 0x86, 0xdb, 0x7a, 0x87, 0xdb, 0x7a, 0xcd, 0xdc, 0x7a, 0xd4, 0xdc, 0x7a, 0xd5, 0xdc, 0x7a, 0xd6, 0xdc, 0x7a, 0xd7, 0xdc, 0x7a, 0xd8, 0xdc, 0x7a, 0xd9, 0xdc, 0x7a, 0xda, 0xdc, 0x7a, 0x98, 0xde, 0x7a, 0xdd, 0xdf, 0x7a, 0xde, 0xdf, 0x7a, 0xe1, 0xdf, 0x7a, 0xa5, 0xe1, 0x7a, 0xa6, 0xe1, 0x7a, 0xa7, 0xe1, 0x7a, 0xed, 0xe2, 0x7a, 0xee, 0xe2, 0x7a, 0xcd, 0xa7, 0x7b, 0xce, 0xa7, 0x7b, 0xd0, 0xa7, 0x7b, 0xc9, 0x8a, 0x7a, 0xca, 0x8a, 0x7a, 0xcb, 0x8a, 0x7a, 0xcc, 0x8a, 0x7a, 0xcd, 0x8a, 0x7a, 0xce, 0x8a, 0x7a, 0xcf, 0x8a, 0x7a, 0xd0, 0x8a, 0x7a, 0xd3, 0x8a, 0x7a, 0xd4, 0x8a, 0x7a, 0x84, 0xdb, 0x7a, 0x85, 0xdb, 0x7a, 0xd1, 0xdc, 0x7a, 0xd2, 0xdc, 0x7a, 0x95, 0xde, 0x7a, 0x96, 0xde, 0x7a, 0x97, 0xde, 0x7a, 0xce, 0xdc, 0x7a, 0xcf, 0xdc, 0x7a, 0x88, 0xe2, 0x7a, 0x89, 0xe2, 0x7a, 0x8e, 0xe2, 0x7a, 0x8a, 0xe2, 0x7a, 0x8b, 0xe2, 0x7a, 0x8c, 0xe2, 0x7a, 0x8d, 0xe2, 0x7a, 0x8f, 0xe2, 0x7a, 0x90, 0xe2, 0x7a, 0x92, 0xe2, 0x7a, 0x99, 0xde, 0x7a, 0x9a, 0xde, 0x7a, 0x9b, 0xde, 0x7a, 0x9c, 0xde, 0x7a, 0x9d, 0xde, 0x7a, 0x9e, 0xde, 0x7a, 0x9f, 0xde, 0x7a, 0x89, 0x8f, 0xb7, 0x01, 0x8a, 0x8f, 0xb7, 0x01, 0x8b, 0x8f, 0xb7, 0x01, 0x93, 0x8f, 0xb7, 0x01, 0x94, 0x8f, 0xb7, 0x01, 0x95, 0x8f, 0xb7, 0x01, 0xca, 0x91, 0xb7, 0x01, 0xcb, 0x91, 0xb7, 0x01, 0xcc, 0x91, 0xb7, 0x01, 0xcd, 0x91, 0xb7, 0x01, 0xce, 0x91, 0xb7, 0x01, 0xcf, 0x91, 0xb7, 0x01, 0x99, 0x92, 0xb7, 0x01, 0x9a, 0x92, 0xb7, 0x01, 0x9b, 0x92, 0xb7, 0x01, 0x9c, 0x92, 0xb7, 0x01, 0xb6, 0xdc, 0xb7, 0x01, 0xb7, 0xdc, 0xb7, 0x01, 0xb8, 0xdc, 0xb7, 0x01, 0xb9, 0xdc, 0xb7, 0x01, 0x99, 0xdd, 0xb7, 0x01, 0x9a, 0xdd, 0xb7, 0x01, 0x9b, 0xdd, 0xb7, 0x01, 0x9c, 0xdd, 0xb7, 0x01, 0x9d, 0xdd, 0xb7, 0x01, 0xc3, 0xe3, 0xb7, 0x01, 0xc4, 0xe3, 0xb7, 0x01, 0xc5, 0xe3, 0xb7, 0x01, 0xc6, 0xe3, 0xb7, 0x01, 0xa7, 0xe4, 0xb7, 0x01, 0xa8, 0xe4, 0xb7, 0x01, 0xa9, 0xe4, 0xb7, 0x01, 0xaa, 0xe4, 0xb7, 0x01, 0x81, 0xe5, 0xb7, 0x01, 0x82, 0xe5, 0xb7, 0x01, 0x83, 0xe5, 0xb7, 0x01, 0x84, 0xe5, 0xb7, 0x01, 0x85, 0xe5, 0xb7, 0x01, 0x86, 0xe5, 0xb7, 0x01, 0x87, 0xe5, 0xb7, 0x01, 0x88, 0xe5, 0xb7, 0x01, 0xc9, 0xe6, 0xb7, 0x01, 0xca, 0xe6, 0xb7, 0x01, 0xcb, 0xe6, 0xb7, 0x01, 0xcc, 0xe6, 0xb7, 0x01, 0xcd, 0xe6, 0xb7, 0x01, 0xce, 0xe6, 0xb7, 0x01, 0xcf, 0xe6, 0xb7, 0x01, 0xd0, 0xe6, 0xb7, 0x01, 0x85, 0xaf, 0xf5, 0x01, 0x86, 0xaf, 0xf5, 0x01, 0x87, 0xaf, 0xf5, 0x01, 0x88, 0xaf, 0xf5, 0x01, 0x89, 0xaf, 0xf5, 0x01, 0x8a, 0xaf, 0xf5, 0x01, 0x8b, 0xaf, 0xf5, 0x01, 0x8c, 0xaf, 0xf5, 0x01, 0x8d, 0xaf, 0xf5, 0x01, 0x8e, 0xaf, 0xf5, 0x01, 0x8f, 0xaf, 0xf5, 0x01, 0x90, 0xaf, 0xf5, 0x01, 0x91, 0xaf, 0xf5, 0x01, 0x92, 0xaf, 0xf5, 0x01, 0xf9, 0xe0, 0xf4, 0x01, 0xfa, 0xe0, 0xf4, 0x01, 0xfd, 0xe0, 0xf4, 0x01, 0xfe, 0xe0, 0xf4, 0x01, 0xff, 0xe0, 0xf4, 0x01, 0x80, 0xe1, 0xf4, 0x01, 0x81, 0xe1, 0xf4, 0x01, 0x93, 0xe1, 0xf4, 0x01, 0x82, 0xe1, 0xf4, 0x01, 0x83, 0xe1, 0xf4, 0x01, 0x84, 0xe1, 0xf4, 0x01, 0x86, 0xe1, 0xf4, 0x01, 0x87, 0xe1, 0xf4, 0x01, 0x88, 0xe1, 0xf4, 0x01, 0x94, 0xe1, 0xf4, 0x01, 0x89, 0xe1, 0xf4, 0x01, 0x8a, 0xe1, 0xf4, 0x01, 0x8b, 0xe1, 0xf4, 0x01, 0x8c, 0xe1, 0xf4, 0x01, 0x8d, 0xe1, 0xf4, 0x01, 0x8e, 0xe1, 0xf4, 0x01, 0x8f, 0xe1, 0xf4, 0x01, 0x90, 0xe1, 0xf4, 0x01, 0x91, 0xe1, 0xf4, 0x01, 0x95, 0xe1, 0xf4, 0x01, 0x96, 0xe1, 0xf4, 0x01, 0x97, 0xe1, 0xf4, 0x01, 0x92, 0xe1, 0xf4, 0x01, 0x98, 0xe1, 0xf4, 0x01, 0xbe, 0xe2, 0xf4, 0x01, 0x85, 0xe4, 0xf4, 0x01, 0xbd, 0xad, 0xf5, 0x01, 0xb1, 0xfc, 0xf5, 0x01, 0xb2, 0xfc, 0xf5, 0x01, 0xb3, 0xfc, 0xf5, 0x01, 0xb8, 0xfc, 0xf5, 0x01, 0xb4, 0xfc, 0xf5, 0x01, 0xb5, 0xfc, 0xf5, 0x01, 0xb6, 0xfc, 0xf5, 0x01, 0xb7, 0xfc, 0xf5, 0x01, 0xb9, 0xfc, 0xf5, 0x01, 0xc1, 0xca, 0xf6, 0x01, 0xc2, 0xca, 0xf6, 0x01, 0xc3, 0xca, 0xf6, 0x01, 0xc4, 0xca, 0xf6, 0x01, 0xc5, 0xca, 0xf6, 0x01, 0xc6, 0xca, 0xf6, 0x01, 0xf4, 0xca, 0xf6, 0x01, 0xc7, 0xca, 0xf6, 0x01, 0xc8, 0xca, 0xf6, 0x01, 0xf3, 0xca, 0xf6, 0x01, 0xc9, 0xca, 0xf6, 0x01, 0xca, 0xca, 0xf6, 0x01, 0xcb, 0xca, 0xf6, 0x01, 0xcc, 0xca, 0xf6, 0x01, 0xf5, 0xca, 0xf6, 0x01, 0xcd, 0xca, 0xf6, 0x01, 0xce, 0xca, 0xf6, 0x01, 0xcf, 0xca, 0xf6, 0x01, 0xa5, 0xcb, 0xf6, 0x01, 0xd7, 0xcb, 0xf6, 0x01, 0xda, 0xcb, 0xf6, 0x01, 0xa6, 0xcb, 0xf6, 0x01, 0xa7, 0xcb, 0xf6, 0x01, 0xd9, 0xcb, 0xf6, 0x01, 0xa8, 0xcb, 0xf6, 0x01, 0xd8, 0xcb, 0xf6, 0x01, 0xa9, 0xcb, 0xf6, 0x01, 0xaa, 0xcb, 0xf6, 0x01, 0xdb, 0xcb, 0xf6, 0x01, 0xab, 0xcb, 0xf6, 0x01, 0xac, 0xcb, 0xf6, 0x01, 0xad, 0xcb, 0xf6, 0x01, 0xdc, 0xcb, 0xf6, 0x01, 0xdd, 0xcb, 0xf6, 0x01, 0xae, 0xcb, 0xf6, 0x01, 0xb2, 0xcb, 0xf6, 0x01, 0xb3, 0xcb, 0xf6, 0x01, 0xde, 0xcb, 0xf6, 0x01, 0xdf, 0xcb, 0xf6, 0x01, 0xe0, 0xcb, 0xf6, 0x01, 0xe1, 0xcb, 0xf6, 0x01, 0xe2, 0xcb, 0xf6, 0x01, 0xb4, 0xcb, 0xf6, 0x01, 0xe9, 0xcb, 0xf6, 0x01, 0xe3, 0xcb, 0xf6, 0x01, 0xe4, 0xcb, 0xf6, 0x01, 0xe5, 0xcb, 0xf6, 0x01, 0xe6, 0xcb, 0xf6, 0x01, 0xe7, 0xcb, 0xf6, 0x01, 0xe8, 0xcb, 0xf6, 0x01, 0x89, 0xcc, 0xf6, 0x01, 0xd1, 0x98, 0xf7, 0x01, 0xd2, 0x98, 0xf7, 0x01, 0xd3, 0x98, 0xf7, 0x01, 0xd4, 0x98, 0xf7, 0x01, 0xd5, 0x98, 0xf7, 0x01, 0xd6, 0x98, 0xf7, 0x01, 0xd7, 0x98, 0xf7, 0x01, 0xd8, 0x98, 0xf7, 0x01, 0xd9, 0x98, 0xf7, 0x01, 0xda, 0x98, 0xf7, 0x01, 0xdb, 0x98, 0xf7, 0x01, 0xdc, 0x98, 0xf7, 0x01, 0xa4, 0xf0, 0xf7, 0x01, 0xa5, 0xf0, 0xf7, 0x01, 0xae, 0xf0, 0xf7, 0x01, 0xaf, 0xf0, 0xf7, 0x01, 0xfe, 0xf0, 0xf7, 0x01, 0xff, 0xf0, 0xf7, 0x01, 0x88, 0xf1, 0xf7, 0x01, 0x89, 0xf1, 0xf7, 0x01, 0x9e, 0xf7, 0xf7, 0x01, 0x9f, 0xf7, 0xf7, 0x01, 0xa8, 0xf7, 0xf7, 0x01, 0xa9, 0xf7, 0xf7, 0x01, 0x8f, 0xbf, 0xf8, 0x01, 0x90, 0xbf, 0xf8, 0x01, 0x91, 0xbf, 0xf8, 0x01, 0xe2, 0xf0, 0xab, 0x03, 0xe3, 0xf0, 0xab, 0x03, 0xe4, 0xf0, 0xab, 0x03, 0xe5, 0xa4, 0xe8, 0x03, 0xe6, 0xa4, 0xe8, 0x03, 0xe8, 0xa4, 0xe8, 0x03, 0xe9, 0xa4, 0xe8, 0x03, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetDailyActiveInfoCsReq)]
        public static async Task OnGetDailyActiveInfo(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x0d, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x12, 0x14, 0xa3, 0x96, 0x80, 0x01, 0x85, 0x97, 0x80, 0x01, 0x8d, 0x97, 0x80, 0x01, 0x95, 0x97, 0x80, 0x01, 0x96, 0x97, 0x80, 0x01, 0x4a, 0x08, 0x08, 0x01, 0x20, 0x01, 0x38, 0x02, 0x78, 0x64, 0x4a, 0x09, 0x08, 0x01, 0x20, 0x02, 0x38, 0x02, 0x78, 0xc8, 0x01, 0x4a, 0x09, 0x08, 0x01, 0x20, 0x03, 0x38, 0x02, 0x78, 0xac, 0x02, 0x4a, 0x09, 0x08, 0x01, 0x20, 0x04, 0x38, 0x02, 0x78, 0x90, 0x03, 0x4a, 0x09, 0x08, 0x01, 0x20, 0x05, 0x38, 0x02, 0x78, 0xf4, 0x03, 0x70, 0xbc, 0x05, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetSpringRecoverDataCsReq)]
        public static async Task OnGetSpringRecoverData(Session session, byte[] _)
        {
            var spring = new GetSpringRecoverDataScRsp
            {
                HGPHPJMOIHK = new HCMHCAPMDNO
                {
                    JLLDBGGMCOD = 600
                },

                JJPFKBLEJAF = new LCIKOENMNNP
                {
                    IsAutoRecover = true,
                    TotalRecoverPercentage = 100
                }
            };

            await session.SendAsync(Opcode.GetSpringRecoverDataScRsp, spring);
        }

        [Handler(Opcode.GetBasicInfoCsReq)]
        public static async Task OnGetBasicInfo(Session session, byte[] _)
        {
            var a = new GetBasicInfoScRsp
            {
                CurDay = 1,
                NextRecoverTime = 1995485144,
                GameplayBirthday = 1228
            };
            await session.SendAsync(Opcode.GetBasicInfoScRsp, a);
        }

        [Handler(Opcode.GetHeroBasicTypeInfoCsReq)]
        public static async Task OnGetHeroBasicTypeInfo(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x60, 0x01, 0x22, 0x05, 0x60, 0xc1, 0x3e, 0x70, 0x01, 0x58, 0xc1, 0x3e, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetBagCsReq)]
        public static async Task OnGetBag(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x02, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x3a, 0x04, 0x28, 0x01, 0x50, 0x14, 0x3a, 0x04, 0x28, 0x66, 0x50, 0x14, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetPlayerBoardDataCsReq)]
        public static async Task OnGetPlayerBoardData(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x0b, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x20, 0xa9, 0xa2, 0x0c, 0x12, 0x09, 0x38, 0x01, 0x52, 0x05, 0x40, 0xe9, 0x07, 0x68, 0x01, 0x4a, 0x04, 0x38, 0x8e, 0xa3, 0x0c, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetAvatarDataCsReq)]
        public static async Task OnGetAvatarData(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x01, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x04, 0xcd, 0x58, 0x01, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xa9, 0x8c, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xaa, 0x8c, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xab, 0x8c, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xac, 0x8c, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xaf, 0x8c, 0x3d, 0x10, 0x01, 0x20, 0xe9, 0x07, 0x42, 0x32, 0x50, 0x01, 0x4a, 0x07, 0x08, 0xe9, 0xab, 0xe8, 0x03, 0x10, 0x01, 0x4a, 0x07, 0x08, 0xea, 0xab, 0xe8, 0x03, 0x10, 0x01, 0x4a, 0x07, 0x08, 0xeb, 0xab, 0xe8, 0x03, 0x10, 0x01, 0x4a, 0x07, 0x08, 0xec, 0xab, 0xe8, 0x03, 0x10, 0x01, 0x4a, 0x07, 0x08, 0xef, 0xab, 0xe8, 0x03, 0x10, 0x01, 0x20, 0xc1, 0x3e, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0x91, 0x94, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x92, 0x94, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x93, 0x94, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x94, 0x94, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x97, 0x94, 0x3d, 0x10, 0x01, 0x20, 0xea, 0x07, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xf9, 0x9b, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xfa, 0x9b, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xfb, 0x9b, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xfc, 0x9b, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xff, 0x9b, 0x3d, 0x10, 0x01, 0x20, 0xeb, 0x07, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xe1, 0xa3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xe2, 0xa3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xe3, 0xa3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xe4, 0xa3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xe7, 0xa3, 0x3d, 0x10, 0x01, 0x20, 0xec, 0x07, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xc9, 0xab, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xca, 0xab, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xcb, 0xab, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xcc, 0xab, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xcf, 0xab, 0x3d, 0x10, 0x01, 0x20, 0xed, 0x07, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xb1, 0xb3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xb2, 0xb3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xb3, 0xb3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xb4, 0xb3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xb7, 0xb3, 0x3d, 0x10, 0x01, 0x20, 0xee, 0x07, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0x81, 0xc3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x82, 0xc3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x83, 0xc3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x84, 0xc3, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x87, 0xc3, 0x3d, 0x10, 0x01, 0x20, 0xf0, 0x07, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xe9, 0xca, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xea, 0xca, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xeb, 0xca, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xec, 0xca, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xef, 0xca, 0x3d, 0x10, 0x01, 0x20, 0xf1, 0x07, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0x89, 0xea, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x8a, 0xea, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x8b, 0xea, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x8c, 0xea, 0x3d, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x8f, 0xea, 0x3d, 0x10, 0x01, 0x20, 0xf5, 0x07, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xc9, 0x99, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xca, 0x99, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xcb, 0x99, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xcc, 0x99, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xcf, 0x99, 0x43, 0x10, 0x01, 0x20, 0xcd, 0x08, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xb1, 0xa1, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xb2, 0xa1, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xb3, 0xa1, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xb4, 0xa1, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xb7, 0xa1, 0x43, 0x10, 0x01, 0x20, 0xce, 0x08, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0x99, 0xa9, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x9a, 0xa9, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x9b, 0xa9, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x9c, 0xa9, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x9f, 0xa9, 0x43, 0x10, 0x01, 0x20, 0xcf, 0x08, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0x81, 0xb1, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x82, 0xb1, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x83, 0xb1, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x84, 0xb1, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x87, 0xb1, 0x43, 0x10, 0x01, 0x20, 0xd0, 0x08, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xe9, 0xb8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xea, 0xb8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xeb, 0xb8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xec, 0xb8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xef, 0xb8, 0x43, 0x10, 0x01, 0x20, 0xd1, 0x08, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xd1, 0xc0, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xd2, 0xc0, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xd3, 0xc0, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xd4, 0xc0, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xd7, 0xc0, 0x43, 0x10, 0x01, 0x20, 0xd2, 0x08, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xb9, 0xc8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xba, 0xc8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xbb, 0xc8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xbc, 0xc8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xbf, 0xc8, 0x43, 0x10, 0x01, 0x20, 0xd3, 0x08, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xa1, 0xd0, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xa2, 0xd0, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xa3, 0xd0, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xa4, 0xd0, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xa7, 0xd0, 0x43, 0x10, 0x01, 0x20, 0xd4, 0x08, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0x89, 0xd8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x8a, 0xd8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x8b, 0xd8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x8c, 0xd8, 0x43, 0x10, 0x01, 0x4a, 0x06, 0x08, 0x8f, 0xd8, 0x43, 0x10, 0x01, 0x20, 0xd5, 0x08, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xe9, 0xa6, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xea, 0xa6, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xeb, 0xa6, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xec, 0xa6, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xef, 0xa6, 0x49, 0x10, 0x01, 0x20, 0xb1, 0x09, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xd1, 0xae, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xd2, 0xae, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xd3, 0xae, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xd4, 0xae, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xd7, 0xae, 0x49, 0x10, 0x01, 0x20, 0xb2, 0x09, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xb9, 0xb6, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xba, 0xb6, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xbb, 0xb6, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xbc, 0xb6, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xbf, 0xb6, 0x49, 0x10, 0x01, 0x20, 0xb3, 0x09, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xa1, 0xbe, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xa2, 0xbe, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xa3, 0xbe, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xa4, 0xbe, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xa7, 0xbe, 0x49, 0x10, 0x01, 0x20, 0xb4, 0x09, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xf1, 0xcd, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xf2, 0xcd, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xf3, 0xcd, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xf4, 0xcd, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xf7, 0xcd, 0x49, 0x10, 0x01, 0x20, 0xb6, 0x09, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xa9, 0xe5, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xaa, 0xe5, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xab, 0xe5, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xac, 0xe5, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xaf, 0xe5, 0x49, 0x10, 0x01, 0x20, 0xb9, 0x09, 0x42, 0x2d, 0x50, 0x01, 0x4a, 0x06, 0x08, 0xf9, 0xf4, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xfa, 0xf4, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xfb, 0xf4, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xfc, 0xf4, 0x49, 0x10, 0x01, 0x4a, 0x06, 0x08, 0xff, 0xf4, 0x49, 0x10, 0x01, 0x20, 0xbb, 0x09, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetAllLineupDataCsReq)]
        public static async Task OnGetAllLineupData(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x62, 0x3d, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x20, 0x30, 0x6a, 0x0d, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xc1, 0x3e, 0x50, 0x64, 0x6a, 0x0f, 0x60, 0x01, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xd0, 0x08, 0x50, 0x64, 0x6a, 0x0f, 0x60, 0x02, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xb3, 0x09, 0x50, 0x64, 0x48, 0x05, 0x20, 0x05, 0x62, 0x50, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x20, 0x31, 0x6a, 0x0d, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xed, 0x07, 0x50, 0x64, 0x6a, 0x0f, 0x60, 0x01, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xee, 0x07, 0x50, 0x64, 0x6a, 0x0f, 0x60, 0x02, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xce, 0x08, 0x50, 0x64, 0x6a, 0x0f, 0x60, 0x03, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xbb, 0x09, 0x50, 0x64, 0x08, 0x01, 0x48, 0x05, 0x20, 0x05, 0x62, 0x1d, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x20, 0x32, 0x6a, 0x0d, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xe9, 0x07, 0x50, 0x64, 0x08, 0x02, 0x48, 0x05, 0x20, 0x05, 0x62, 0x1d, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x20, 0x33, 0x6a, 0x0d, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xe9, 0x07, 0x50, 0x64, 0x08, 0x03, 0x48, 0x05, 0x20, 0x05, 0x62, 0x1d, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x20, 0x34, 0x6a, 0x0d, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xe9, 0x07, 0x50, 0x64, 0x08, 0x04, 0x48, 0x05, 0x20, 0x05, 0x62, 0x1d, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x20, 0x35, 0x6a, 0x0d, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xe9, 0x07, 0x50, 0x64, 0x08, 0x05, 0x48, 0x05, 0x20, 0x05, 0x18, 0x01, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetMissionEventDataCsReq)]
        public static async Task OnGetMissionEventData(Session session, byte[] _)
        {
            await session.SendAsync(Opcode.GetMissionEventDataScRsp, new GetMissionEventDataScRsp { });
        }

        [Handler(Opcode.GetChallengeCsReq)]
        public static async Task OnGetChallengeRsp(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x06, 0xc5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x72, 0x04, 0x68, 0x01, 0x28, 0x07, 0x72, 0x04, 0x68, 0x02, 0x28, 0x07, 0x72, 0x04, 0x68, 0x03, 0x28, 0x07, 0x72, 0x04, 0x68, 0x04, 0x28, 0x07, 0x72, 0x04, 0x68, 0x05, 0x28, 0x07, 0x72, 0x04, 0x68, 0x06, 0x28, 0x07, 0x72, 0x04, 0x68, 0x07, 0x28, 0x07, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetRogueInfoCsReq)]
        public static async Task OnGetRogueInfo(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x07, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x12, 0x00, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetExpeditionDataCsReq)]
        public static async Task OnGetExpeditionData(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x09, 0xe5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x04, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.SyncClientResVersionCsReq)]
        public static async Task OnSyncClientResVersion(Session session, byte[] payload)
        {
            var sync = SyncClientResVersionCsReq.Parser.ParseFrom(payload);
            if (sync == null) return;
            var syncRes = new LNLMFFDHMOE
            {
                NFJLJJFLJKB = sync.CMFAFDDBGFA
            };
            await session.SendAsync(Opcode.SyncClientResVersionScRsp, syncRes);
        }

        [Handler(Opcode.GetLoginActivityCsReq)]
        public static async Task OnGetLoginActivity(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x0a, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x22, 0x05, 0x10, 0xe9, 0x07, 0x58, 0x01, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetRaidInfoCsReq)]
        public static async Task OnGetRaidInfo(Session session, byte[] _)
        {
            await session.SendAsync(Opcode.GetRaidInfoScRsp, new GetRaidInfoScRsp { });
        }

        [Handler(Opcode.GetCurSceneInfoCsReq)]
        public static async Task OnGetCurSceneInfo(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x05, 0xa7, 0x00, 0x00, 0x00, 0x00, 0x01, 0x48, 0x62, 0xc5, 0x02, 0x08, 0xf5, 0xd7, 0x7a, 0x28, 0x85, 0x9d, 0x01, 0x70, 0x89, 0xef, 0xca, 0x09, 0x50, 0x9d, 0x86, 0x40, 0x48, 0x02, 0x1a, 0x91, 0x02, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f, 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f, 0x80, 0x01, 0x81, 0x01, 0x82, 0x01, 0x83, 0x01, 0x84, 0x01, 0x85, 0x01, 0x86, 0x01, 0x87, 0x01, 0x88, 0x01, 0x89, 0x01, 0x8a, 0x01, 0x8b, 0x01, 0x8c, 0x01, 0x8d, 0x01, 0x8e, 0x01, 0x8f, 0x01, 0x90, 0x01, 0x91, 0x01, 0x92, 0x01, 0x93, 0x01, 0x94, 0x01, 0x95, 0x01, 0x96, 0x01, 0x97, 0x01, 0x98, 0x01, 0x99, 0x01, 0x9a, 0x01, 0x9b, 0x01, 0x9c, 0x01, 0x9d, 0x01, 0x9e, 0x01, 0x9f, 0x01, 0xa0, 0x01, 0xa1, 0x01, 0xa2, 0x01, 0xa3, 0x01, 0xa4, 0x01, 0xa5, 0x01, 0xa6, 0x01, 0xa7, 0x01, 0xa8, 0x01, 0xa9, 0x01, 0xaa, 0x01, 0xab, 0x01, 0xac, 0x01, 0xad, 0x01, 0xae, 0x01, 0xaf, 0x01, 0xb0, 0x01, 0xb1, 0x01, 0xb2, 0x01, 0xb3, 0x01, 0xb4, 0x01, 0xb5, 0x01, 0xb6, 0x01, 0xb7, 0x01, 0xb8, 0x01, 0xb9, 0x01, 0xba, 0x01, 0xbb, 0x01, 0xbc, 0x01, 0xbd, 0x01, 0xbe, 0x01, 0xbf, 0x01, 0xc0, 0x01, 0xc1, 0x01, 0xc2, 0x01, 0xc3, 0x01, 0xc4, 0x01, 0xc5, 0x01, 0xc6, 0x01, 0xc7, 0x01, 0xc8, 0x01, 0x7a, 0x1c, 0x60, 0x01, 0x50, 0x01, 0x28, 0x9d, 0x86, 0x40, 0x22, 0x12, 0x5a, 0x0e, 0x28, 0xb7, 0x03, 0x70, 0xbd, 0x9c, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x42, 0x00, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetCurLineupDataCsReq)]
        public static async Task OnGetCurLineupData(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x03, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x1a, 0x50, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x20, 0x31, 0x6a, 0x0d, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xed, 0x07, 0x50, 0x64, 0x6a, 0x0f, 0x60, 0x01, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xee, 0x07, 0x50, 0x64, 0x6a, 0x0f, 0x60, 0x02, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xce, 0x08, 0x50, 0x64, 0x6a, 0x0f, 0x60, 0x03, 0x70, 0x03, 0x58, 0x90, 0x4e, 0x38, 0x90, 0x4e, 0x08, 0xbb, 0x09, 0x50, 0x64, 0x08, 0x01, 0x48, 0x05, 0x20, 0x05, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetCurBattleInfoCsReq)]
        public static async Task OnGetCurBattleInfo(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x00, 0x9b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7d, 0x72, 0x1a, 0x08, 0x03, 0x10, 0xed, 0x07, 0x18, 0x01, 0x20, 0x01, 0x3a, 0x0a, 0x08, 0xa3, 0x9c, 0x01, 0x10, 0x01, 0x18, 0x01, 0x20, 0x01, 0x40, 0x90, 0x4e, 0x50, 0x01, 0x72, 0x1c, 0x08, 0x03, 0x10, 0xee, 0x07, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x0a, 0x08, 0xa3, 0x9c, 0x01, 0x10, 0x01, 0x18, 0x01, 0x20, 0x01, 0x40, 0x90, 0x4e, 0x50, 0x01, 0x72, 0x1c, 0x08, 0x03, 0x10, 0xce, 0x08, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x3a, 0x0a, 0x08, 0xa3, 0x9c, 0x01, 0x10, 0x01, 0x18, 0x01, 0x20, 0x01, 0x40, 0x90, 0x4e, 0x50, 0x01, 0x72, 0x1c, 0x08, 0x03, 0x10, 0xbb, 0x09, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x0a, 0x08, 0xa3, 0x9c, 0x01, 0x10, 0x01, 0x18, 0x01, 0x20, 0x01, 0x40, 0x90, 0x4e, 0x50, 0x01, 0x50, 0x01, 0x48, 0xc7, 0x13, 0x42, 0x00, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetNpcStatusCsReq)]
        public static async Task OnGetNpcStatus(Session session, byte[] _)
        {
            await session.SendAsync(Opcode.GetNpcStatusScRsp, new GetNpcStatusScRsp { });
        }

        [Handler(Opcode.GetNpcMessageGroupCsReq)]
        public static async Task OnGetNpcMessageGroup(Session session, byte[] _)
        {
            await session.SendAsync(Opcode.GetNpcMessageGroupScRsp, new GetNpcMessageGroupScRsp { });
        }

        [Handler(Opcode.GetTutorialCsReq)]
        public static async Task OnGetTutorial(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x06, 0x61, 0x00, 0x00, 0x00, 0x00, 0x02, 0xd1, 0x0a, 0x05, 0x78, 0xe9, 0x07, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xea, 0x07, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xeb, 0x07, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xec, 0x07, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xed, 0x07, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xef, 0x07, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xf0, 0x07, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xf2, 0x07, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xd0, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xd1, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xd2, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xd3, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xd4, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xd8, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xda, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xdb, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xdc, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xdd, 0x0f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb9, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xba, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xbb, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xbc, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xbd, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xbe, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xc0, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xc1, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xc2, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xc3, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xc4, 0x17, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x82, 0x19, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa2, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa3, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa4, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa5, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa6, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa7, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa8, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa9, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xaa, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xab, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xac, 0x1f, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x89, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x8a, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x8b, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x8c, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x8d, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x8e, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x8f, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x90, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x91, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x92, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x93, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x94, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x95, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x96, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x97, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x98, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x99, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x9a, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x9b, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x9d, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x9e, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0x9f, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa0, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa1, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa2, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa3, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa4, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa5, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa6, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa7, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa8, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa9, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xaa, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xab, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xac, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xaf, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb1, 0x27, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xd9, 0x36, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xa9, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xaa, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xab, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xac, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xad, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xae, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xaf, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb0, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb1, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb2, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb3, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb4, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb5, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb6, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb7, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb8, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xb9, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xba, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xbb, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xbc, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xbd, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xbe, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xbf, 0x46, 0x68, 0x02, 0x0a, 0x05, 0x78, 0xc0, 0x46, 0x68, 0x02, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetTutorialGuideCsReq)]
        public static async Task OnGetTutorialGuide(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x06, 0xa1, 0x00, 0x00, 0x00, 0x00, 0x04, 0xe8, 0x72, 0x06, 0x70, 0xf9, 0x91, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0x95, 0xdc, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0x96, 0xdc, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0x97, 0xdc, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc1, 0xde, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa5, 0xdf, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0xed, 0xe0, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0xd1, 0xe1, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb5, 0xe2, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb9, 0xe9, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0xba, 0xe9, 0x06, 0x50, 0x02, 0x72, 0x06, 0x70, 0x99, 0x9f, 0x0c, 0x50, 0x02, 0x72, 0x06, 0x70, 0xfd, 0x9f, 0x0c, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe1, 0xa0, 0x0c, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb5, 0xe9, 0x0c, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe1, 0xeb, 0x0c, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc5, 0xec, 0x0c, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc6, 0xec, 0x0c, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa9, 0xed, 0x0c, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc5, 0xb7, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa9, 0xb8, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0x8d, 0xb9, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf1, 0xb9, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0xd5, 0xba, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb9, 0xbb, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0x9d, 0xbc, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0xad, 0xbf, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc9, 0xbe, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0x91, 0xc0, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0x92, 0xc0, 0x0d, 0x50, 0x02, 0x72, 0x06, 0x70, 0x9d, 0xad, 0x12, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe5, 0xf9, 0x12, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe6, 0xf9, 0x12, 0x50, 0x02, 0x72, 0x06, 0x70, 0xad, 0xfb, 0x12, 0x50, 0x02, 0x72, 0x06, 0x70, 0x91, 0xfc, 0x12, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf5, 0xfc, 0x12, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe5, 0xc4, 0x13, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe6, 0xc4, 0x13, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe7, 0xc4, 0x13, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe8, 0xc4, 0x13, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc9, 0xc5, 0x13, 0x50, 0x02, 0x72, 0x06, 0x70, 0xad, 0xc6, 0x13, 0x50, 0x02, 0x72, 0x06, 0x70, 0xae, 0xc6, 0x13, 0x50, 0x02, 0x72, 0x06, 0x70, 0x91, 0xc7, 0x13, 0x50, 0x02, 0x72, 0x06, 0x70, 0x92, 0xc7, 0x13, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe5, 0xb5, 0x18, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe6, 0xb5, 0x18, 0x50, 0x02, 0x72, 0x06, 0x70, 0xd9, 0x84, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0xbd, 0x85, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa1, 0x86, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0x85, 0x87, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0x86, 0x87, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe9, 0x87, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0xcd, 0x88, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb1, 0x89, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0x95, 0x8a, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf9, 0x8a, 0x19, 0x50, 0x02, 0x72, 0x06, 0x70, 0x85, 0xc3, 0x1e, 0x50, 0x02, 0x72, 0x06, 0x70, 0x86, 0xc3, 0x1e, 0x50, 0x02, 0x72, 0x06, 0x70, 0x95, 0x91, 0x1f, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf9, 0x91, 0x1f, 0x50, 0x02, 0x72, 0x06, 0x70, 0xdd, 0x92, 0x1f, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc1, 0x93, 0x1f, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa5, 0x94, 0x1f, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa5, 0xd0, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa6, 0xd0, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x89, 0xd1, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x8a, 0xd1, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x8b, 0xd1, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xed, 0xd1, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xee, 0xd1, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xef, 0xd1, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xd1, 0xd2, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xd2, 0xd2, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe1, 0xd5, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe2, 0xd5, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc5, 0xd6, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc6, 0xd6, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc7, 0xd6, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa9, 0xd7, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xaa, 0xd7, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x8d, 0xd8, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x8e, 0xd8, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf1, 0xd8, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf2, 0xd8, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf3, 0xd8, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb9, 0xda, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xba, 0xda, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x9d, 0xdb, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x9e, 0xdb, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x9f, 0xdb, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa0, 0xdb, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x81, 0xdc, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe5, 0xdc, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe6, 0xdc, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x91, 0xdf, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x92, 0xdf, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf5, 0xdf, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf6, 0xdf, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf7, 0xdf, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf8, 0xdf, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xbd, 0xe1, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xbe, 0xe1, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xbf, 0xe1, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xcd, 0xe4, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xce, 0xe4, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xcf, 0xe4, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb1, 0xe5, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb2, 0xe5, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb3, 0xe5, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xdd, 0xe7, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xde, 0xe7, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa5, 0xe9, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x89, 0xea, 0x24, 0x50, 0x02, 0x72, 0x06, 0x70, 0x95, 0xc6, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf9, 0xc6, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xdd, 0xc7, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc1, 0xc8, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa5, 0xc9, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xed, 0xca, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xee, 0xca, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xd1, 0xcb, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb5, 0xcc, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0x99, 0xcd, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xfd, 0xcd, 0x37, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe1, 0xce, 0x37, 0x50, 0x02, 0x72, 0x07, 0x70, 0xb9, 0xea, 0xbd, 0x01, 0x50, 0x02, 0x72, 0x07, 0x70, 0xe5, 0xec, 0xbd, 0x01, 0x50, 0x02, 0x72, 0x07, 0x70, 0xc9, 0xed, 0xbd, 0x01, 0x50, 0x02, 0x72, 0x07, 0x70, 0xf5, 0xef, 0xbd, 0x01, 0x50, 0x02, 0x72, 0x07, 0x70, 0x91, 0xba, 0xbe, 0x01, 0x50, 0x02, 0x72, 0x07, 0x70, 0x9d, 0xeb, 0xbd, 0x01, 0x50, 0x02, 0x72, 0x07, 0x70, 0xd9, 0xbb, 0xbe, 0x01, 0x50, 0x02, 0x72, 0x07, 0x70, 0xc5, 0x9b, 0xbd, 0x01, 0x50, 0x02, 0x72, 0x06, 0x70, 0xad, 0xec, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xae, 0xec, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xaf, 0xec, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe5, 0xea, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xe6, 0xea, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xf5, 0xed, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xca, 0xeb, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xcb, 0xeb, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xcc, 0xeb, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xc9, 0xeb, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0x92, 0xed, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0x93, 0xed, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0x91, 0xed, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa1, 0xf0, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xa2, 0xf0, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb1, 0xf3, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb3, 0xf3, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb4, 0xf3, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb5, 0xf3, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb6, 0xf3, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb7, 0xf3, 0x30, 0x50, 0x02, 0x72, 0x06, 0x70, 0xb8, 0xf3, 0x30, 0x50, 0x02, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetMailCsReq)]
        public static async Task OnGetMail(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x03, 0x41, 0x00, 0x00, 0x00, 0x00, 0x03, 0x7d, 0x12, 0xf6, 0x06, 0x3a, 0x13, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x43, 0x72, 0x65, 0x70, 0x65, 0x53, 0x52, 0x21, 0x28, 0xa3, 0x91, 0xd3, 0xa3, 0x06, 0x12, 0x07, 0x43, 0x72, 0x65, 0x70, 0x65, 0x53, 0x52, 0x4a, 0xbc, 0x06, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x43, 0x72, 0x65, 0x70, 0x65, 0x53, 0x52, 0x21, 0x0a, 0x0a, 0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x68, 0x61, 0x76, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x61, 0x6d, 0x65, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x20, 0x61, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x68, 0x61, 0x73, 0x2e, 0x0a, 0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x62, 0x65, 0x20, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x0a, 0x54, 0x6f, 0x20, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x20, 0x69, 0x6e, 0x2d, 0x67, 0x61, 0x6d, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x20, 0x70, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x65, 0x64, 0x69, 0x74, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x62, 0x69, 0x6f, 0x20, 0x69, 0x6e, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x20, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x72, 0x2e, 0x63, 0x72, 0x65, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x65, 0x20, 0x69, 0x73, 0x20, 0x66, 0x72, 0x65, 0x65, 0x2c, 0x20, 0x62, 0x75, 0x74, 0x20, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x20, 0x61, 0x72, 0x65, 0x20, 0x61, 0x70, 0x70, 0x72, 0x65, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x20, 0x49, 0x66, 0x20, 0x79, 0x6f, 0x75, 0x27, 0x76, 0x65, 0x20, 0x70, 0x61, 0x69, 0x64, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2c, 0x20, 0x79, 0x6f, 0x75, 0x27, 0x76, 0x65, 0x20, 0x62, 0x65, 0x65, 0x6e, 0x20, 0x73, 0x63, 0x61, 0x6d, 0x6d, 0x65, 0x64, 0x2e, 0x0a, 0x73, 0x72, 0x2e, 0x63, 0x72, 0x65, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x65, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe6, 0x98, 0xaf, 0xe5, 0x85, 0x8d, 0xe8, 0xb4, 0xb9, 0xe6, 0xb8, 0xb8, 0xe7, 0x8e, 0xa9, 0xe7, 0x9a, 0x84, 0xef, 0xbc, 0x8c, 0xe4, 0xbd, 0x86, 0xe5, 0x8f, 0xaf, 0xe4, 0xbb, 0xa5, 0xe6, 0x8d, 0x90, 0xe9, 0x92, 0xb1, 0xe7, 0x9a, 0x84, 0xe8, 0xaf, 0x9d, 0xe6, 0x98, 0xaf, 0xe6, 0x9b, 0xb4, 0xe5, 0xa5, 0xbd, 0xe3, 0x80, 0x82, 0x20, 0xe5, 0xa6, 0x82, 0xe6, 0x9e, 0x9c, 0xe4, 0xbd, 0xa0, 0xe6, 0x98, 0xaf, 0xe4, 0xbb, 0x98, 0xe9, 0x92, 0xb1, 0xe8, 0xbf, 0x9b, 0xe6, 0x9d, 0xa5, 0xe7, 0x9a, 0x84, 0xef, 0xbc, 0x8c, 0xe9, 0x82, 0xa3, 0xe4, 0xbd, 0xa0, 0xe5, 0xb7, 0xb2, 0xe7, 0xbb, 0x8f, 0xe8, 0xa2, 0xab, 0xe9, 0xaa, 0x97, 0xe4, 0xba, 0x86, 0xe3, 0x80, 0x82, 0x0a, 0xd0, 0x94, 0xd0, 0xbe, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x83, 0xd0, 0xbf, 0x20, 0xd0, 0xba, 0x20, 0x73, 0x72, 0x2e, 0x63, 0x72, 0x65, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x65, 0x20, 0xd0, 0xb1, 0xd0, 0xb5, 0xd1, 0x81, 0xd0, 0xbf, 0xd0, 0xbb, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbd, 0xd1, 0x8b, 0xd0, 0xb9, 0x2c, 0x20, 0xd0, 0xbd, 0xd0, 0xbe, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd0, 0xbd, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x8b, 0x20, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd1, 0x8e, 0xd1, 0x82, 0xd1, 0x81, 0xd1, 0x8f, 0x2e, 0x20, 0x20, 0xd0, 0x95, 0xd1, 0x81, 0xd0, 0xbb, 0xd0, 0xb8, 0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0x20, 0xd0, 0xbf, 0xd0, 0xbb, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb8, 0xd0, 0xbb, 0xd0, 0xb8, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x83, 0xd0, 0xbf, 0x2c, 0x20, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0x20, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x81, 0x20, 0xd0, 0xbe, 0xd0, 0xb1, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xbd, 0xd1, 0x83, 0xd0, 0xbb, 0xd0, 0xb8, 0x0a, 0x3c, 0x61, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x4f, 0x70, 0x65, 0x6e, 0x55, 0x52, 0x4c, 0x32, 0x20, 0x68, 0x72, 0x65, 0x66, 0x3d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x67, 0x67, 0x2f, 0x51, 0x59, 0x5a, 0x78, 0x72, 0x63, 0x4a, 0x6b, 0x6a, 0x48, 0x3e, 0x3e, 0x3e, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x3c, 0x2f, 0x61, 0x3e, 0x20, 0x7c, 0x20, 0x3c, 0x61, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x4f, 0x70, 0x65, 0x6e, 0x55, 0x52, 0x4c, 0x32, 0x20, 0x68, 0x72, 0x65, 0x66, 0x3d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x6b, 0x6f, 0x2d, 0x66, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x78, 0x64, 0x3e, 0x4b, 0x6f, 0x2d, 0x66, 0x69, 0x3c, 0x2f, 0x61, 0x3e, 0x20, 0x7c, 0x20, 0x3c, 0x61, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x4f, 0x70, 0x65, 0x6e, 0x55, 0x52, 0x4c, 0x32, 0x20, 0x68, 0x72, 0x65, 0x66, 0x3d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x61, 0x66, 0x64, 0x69, 0x61, 0x6e, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x70, 0x65, 0x3e, 0x41, 0x46, 0x44, 0x49, 0x41, 0x4e, 0x20, 0x3c, 0x3c, 0x3c, 0x2f, 0x61, 0x3e, 0x0a, 0x18, 0xa3, 0x86, 0xf8, 0xa3, 0x06, 0x58, 0x01, 0x0a, 0x09, 0x4a, 0x07, 0x38, 0xce, 0x08, 0x78, 0x50, 0x50, 0x01, 0x20, 0x01, 0x68, 0x01, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetShopListCsReq)]
        public static async Task OnGetShopList(Session session, byte[] _)
        {
            await session.SendAsync(Opcode.GetShopListScRsp, new GetShopListScRsp { });
        }

        [Handler(Opcode.UnlockTutorialGuideCsReq)]
        public static async Task UnlockTutorialGuide(Session session, byte[] payload)
        {
            var unlockTutReq = UnlockTutorialGuideCsReq.Parser.ParseFrom(payload); //uint32_t groupId
            if (unlockTutReq == null) return;
            var unlockTutRsp = new UnlockTutorialGuideScRsp
            {
                TutorialGuide = new TutorialGuide { Status = TutorialStatus.TutorialFinish, Id = unlockTutReq.GroupID }
            };
            await session.SendAsync(Opcode.UnlockTutorialGuideScRsp, unlockTutRsp);
        }

        [Handler(Opcode.FinishTutorialGuideCsReq)]
        public static async Task FinishTutorialGuide(Session session, byte[] payload)
        {
            var finishTutReq = FinishTutorialGuideCsReq.Parser.ParseFrom(payload);
            if (finishTutReq == null) return;
            var finishTutRsp = new FinishTutorialGuideScRsp();
            finishTutRsp.Reward = new ItemList();
            finishTutRsp.Reward.ItemList_.Add(new Item { ItemId = 1, Num = 1 });
            finishTutRsp.TutorialGuide = new TutorialGuide { Status = TutorialStatus.TutorialFinish, Id = finishTutReq.GroupID };
            await session.SendAsync(Opcode.FinishTutorialGuideScRsp, finishTutRsp);
        }

        [Handler(Opcode.SetClientPausedCsReq)]
        public static async Task SetClientPaused(Session session, byte[] payload) //1409
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x05, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.GetFirstTalkCsReq)]
        public static async Task OnFirstTalkNpc(Session session, byte[] payload) //2155
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x08, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x4a, 0x04, 0x50, 0xd1, 0xe1, 0x06, 0x4a, 0x04, 0x50, 0xa5, 0xdf, 0x06, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.PlayerHeartbeatCsReq)]
        public static async Task PlayerHeartbeat(Session session, byte[] payload) //1409
        {
            var beatReq = PlayerHeartBeatCsReq.Parser.ParseFrom(payload);
            if (beatReq == null) return;
            var beat = new PlayerHeartBeatScRsp();
            beat.HeartBeat = beatReq.HeartBeat;
            beat.HeartBeat2 = beatReq.HeartBeat;
            //await session.SendAsync(Opcode.PlayerHeartbeatScReq, beat);
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x00, 0x1c, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x70, 0x8b, 0x04, 0x18, 0xfa, 0x4b, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.EntityBindPropCsReq)]
        public static async Task EntityPropBind(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x05, 0xb7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.EnterSectionCsReq)]
        public static async Task EnterSection(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x05, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd7, 0xa1, 0x52, 0xc8 });
        }

        [Handler(Opcode.SceneEntityMoveCsReq)]
        public static async Task SceneEntityMove(Session session, byte[] _)
        {
            await session.SendBytesAsync(new byte[] { 0x9d, 0x74, 0xc7, 0x14, 0x05, 0x99, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd7, 0xa1, 0x52, 0xc8 });
        }
    }
}*/