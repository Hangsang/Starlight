// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GetBasicInfoScRsp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from GetBasicInfoScRsp.proto</summary>
public static partial class GetBasicInfoScRspReflection {

  #region Descriptor
  /// <summary>File descriptor for GetBasicInfoScRsp.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GetBasicInfoScRspReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChdHZXRCYXNpY0luZm9TY1JzcC5wcm90byLhAQoRR2V0QmFzaWNJbmZvU2NS",
          "c3ASFQoNZXhjaGFuZ2VUaW1lcxgBIAEoDRIPCgdyZXRjb2RlGAsgASgNEhsK",
          "E2xhc3RTZXROaWNrbmFtZVRpbWUYAyABKAMSDgoGY3VyRGF5GAYgASgNEhcK",
          "D25leHRSZWNvdmVyVGltZRgMIAEoAxIYChBnYW1lcGxheUJpcnRoZGF5GAUg",
          "ASgNEiMKG2lzUHJvdGVjdGVkRXF1aXBtZW50UmFyaXR5NBgEIAEoCBIfChd3",
          "ZWVrQ29jb29uRmluaXNoZWRDb3VudBgOIAEoDWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GetBasicInfoScRsp), global::GetBasicInfoScRsp.Parser, new[]{ "ExchangeTimes", "Retcode", "LastSetNicknameTime", "CurDay", "NextRecoverTime", "GameplayBirthday", "IsProtectedEquipmentRarity4", "WeekCocoonFinishedCount" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GetBasicInfoScRsp : pb::IMessage<GetBasicInfoScRsp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GetBasicInfoScRsp> _parser = new pb::MessageParser<GetBasicInfoScRsp>(() => new GetBasicInfoScRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GetBasicInfoScRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GetBasicInfoScRspReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GetBasicInfoScRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GetBasicInfoScRsp(GetBasicInfoScRsp other) : this() {
    exchangeTimes_ = other.exchangeTimes_;
    retcode_ = other.retcode_;
    lastSetNicknameTime_ = other.lastSetNicknameTime_;
    curDay_ = other.curDay_;
    nextRecoverTime_ = other.nextRecoverTime_;
    gameplayBirthday_ = other.gameplayBirthday_;
    isProtectedEquipmentRarity4_ = other.isProtectedEquipmentRarity4_;
    weekCocoonFinishedCount_ = other.weekCocoonFinishedCount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GetBasicInfoScRsp Clone() {
    return new GetBasicInfoScRsp(this);
  }

  /// <summary>Field number for the "exchangeTimes" field.</summary>
  public const int ExchangeTimesFieldNumber = 1;
  private uint exchangeTimes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ExchangeTimes {
    get { return exchangeTimes_; }
    set {
      exchangeTimes_ = value;
    }
  }

  /// <summary>Field number for the "retcode" field.</summary>
  public const int RetcodeFieldNumber = 11;
  private uint retcode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Retcode {
    get { return retcode_; }
    set {
      retcode_ = value;
    }
  }

  /// <summary>Field number for the "lastSetNicknameTime" field.</summary>
  public const int LastSetNicknameTimeFieldNumber = 3;
  private long lastSetNicknameTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long LastSetNicknameTime {
    get { return lastSetNicknameTime_; }
    set {
      lastSetNicknameTime_ = value;
    }
  }

  /// <summary>Field number for the "curDay" field.</summary>
  public const int CurDayFieldNumber = 6;
  private uint curDay_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CurDay {
    get { return curDay_; }
    set {
      curDay_ = value;
    }
  }

  /// <summary>Field number for the "nextRecoverTime" field.</summary>
  public const int NextRecoverTimeFieldNumber = 12;
  private long nextRecoverTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long NextRecoverTime {
    get { return nextRecoverTime_; }
    set {
      nextRecoverTime_ = value;
    }
  }

  /// <summary>Field number for the "gameplayBirthday" field.</summary>
  public const int GameplayBirthdayFieldNumber = 5;
  private uint gameplayBirthday_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GameplayBirthday {
    get { return gameplayBirthday_; }
    set {
      gameplayBirthday_ = value;
    }
  }

  /// <summary>Field number for the "isProtectedEquipmentRarity4" field.</summary>
  public const int IsProtectedEquipmentRarity4FieldNumber = 4;
  private bool isProtectedEquipmentRarity4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsProtectedEquipmentRarity4 {
    get { return isProtectedEquipmentRarity4_; }
    set {
      isProtectedEquipmentRarity4_ = value;
    }
  }

  /// <summary>Field number for the "weekCocoonFinishedCount" field.</summary>
  public const int WeekCocoonFinishedCountFieldNumber = 14;
  private uint weekCocoonFinishedCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint WeekCocoonFinishedCount {
    get { return weekCocoonFinishedCount_; }
    set {
      weekCocoonFinishedCount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GetBasicInfoScRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GetBasicInfoScRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ExchangeTimes != other.ExchangeTimes) return false;
    if (Retcode != other.Retcode) return false;
    if (LastSetNicknameTime != other.LastSetNicknameTime) return false;
    if (CurDay != other.CurDay) return false;
    if (NextRecoverTime != other.NextRecoverTime) return false;
    if (GameplayBirthday != other.GameplayBirthday) return false;
    if (IsProtectedEquipmentRarity4 != other.IsProtectedEquipmentRarity4) return false;
    if (WeekCocoonFinishedCount != other.WeekCocoonFinishedCount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (ExchangeTimes != 0) hash ^= ExchangeTimes.GetHashCode();
    if (Retcode != 0) hash ^= Retcode.GetHashCode();
    if (LastSetNicknameTime != 0L) hash ^= LastSetNicknameTime.GetHashCode();
    if (CurDay != 0) hash ^= CurDay.GetHashCode();
    if (NextRecoverTime != 0L) hash ^= NextRecoverTime.GetHashCode();
    if (GameplayBirthday != 0) hash ^= GameplayBirthday.GetHashCode();
    if (IsProtectedEquipmentRarity4 != false) hash ^= IsProtectedEquipmentRarity4.GetHashCode();
    if (WeekCocoonFinishedCount != 0) hash ^= WeekCocoonFinishedCount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ExchangeTimes != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ExchangeTimes);
    }
    if (LastSetNicknameTime != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(LastSetNicknameTime);
    }
    if (IsProtectedEquipmentRarity4 != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsProtectedEquipmentRarity4);
    }
    if (GameplayBirthday != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(GameplayBirthday);
    }
    if (CurDay != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(CurDay);
    }
    if (Retcode != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(Retcode);
    }
    if (NextRecoverTime != 0L) {
      output.WriteRawTag(96);
      output.WriteInt64(NextRecoverTime);
    }
    if (WeekCocoonFinishedCount != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(WeekCocoonFinishedCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ExchangeTimes != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ExchangeTimes);
    }
    if (LastSetNicknameTime != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(LastSetNicknameTime);
    }
    if (IsProtectedEquipmentRarity4 != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsProtectedEquipmentRarity4);
    }
    if (GameplayBirthday != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(GameplayBirthday);
    }
    if (CurDay != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(CurDay);
    }
    if (Retcode != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(Retcode);
    }
    if (NextRecoverTime != 0L) {
      output.WriteRawTag(96);
      output.WriteInt64(NextRecoverTime);
    }
    if (WeekCocoonFinishedCount != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(WeekCocoonFinishedCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (ExchangeTimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExchangeTimes);
    }
    if (Retcode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Retcode);
    }
    if (LastSetNicknameTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastSetNicknameTime);
    }
    if (CurDay != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurDay);
    }
    if (NextRecoverTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextRecoverTime);
    }
    if (GameplayBirthday != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameplayBirthday);
    }
    if (IsProtectedEquipmentRarity4 != false) {
      size += 1 + 1;
    }
    if (WeekCocoonFinishedCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeekCocoonFinishedCount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GetBasicInfoScRsp other) {
    if (other == null) {
      return;
    }
    if (other.ExchangeTimes != 0) {
      ExchangeTimes = other.ExchangeTimes;
    }
    if (other.Retcode != 0) {
      Retcode = other.Retcode;
    }
    if (other.LastSetNicknameTime != 0L) {
      LastSetNicknameTime = other.LastSetNicknameTime;
    }
    if (other.CurDay != 0) {
      CurDay = other.CurDay;
    }
    if (other.NextRecoverTime != 0L) {
      NextRecoverTime = other.NextRecoverTime;
    }
    if (other.GameplayBirthday != 0) {
      GameplayBirthday = other.GameplayBirthday;
    }
    if (other.IsProtectedEquipmentRarity4 != false) {
      IsProtectedEquipmentRarity4 = other.IsProtectedEquipmentRarity4;
    }
    if (other.WeekCocoonFinishedCount != 0) {
      WeekCocoonFinishedCount = other.WeekCocoonFinishedCount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ExchangeTimes = input.ReadUInt32();
          break;
        }
        case 24: {
          LastSetNicknameTime = input.ReadInt64();
          break;
        }
        case 32: {
          IsProtectedEquipmentRarity4 = input.ReadBool();
          break;
        }
        case 40: {
          GameplayBirthday = input.ReadUInt32();
          break;
        }
        case 48: {
          CurDay = input.ReadUInt32();
          break;
        }
        case 88: {
          Retcode = input.ReadUInt32();
          break;
        }
        case 96: {
          NextRecoverTime = input.ReadInt64();
          break;
        }
        case 112: {
          WeekCocoonFinishedCount = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ExchangeTimes = input.ReadUInt32();
          break;
        }
        case 24: {
          LastSetNicknameTime = input.ReadInt64();
          break;
        }
        case 32: {
          IsProtectedEquipmentRarity4 = input.ReadBool();
          break;
        }
        case 40: {
          GameplayBirthday = input.ReadUInt32();
          break;
        }
        case 48: {
          CurDay = input.ReadUInt32();
          break;
        }
        case 88: {
          Retcode = input.ReadUInt32();
          break;
        }
        case 96: {
          NextRecoverTime = input.ReadInt64();
          break;
        }
        case 112: {
          WeekCocoonFinishedCount = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
